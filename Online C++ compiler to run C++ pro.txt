// Online C++ compiler to run C++ program online
#include <iostream>
using namespace std;
int main() {
   cout<<"HELLO WORLD";
    return 0;
}
     
         ***


// take user input and display the output
#include <iostream>
using namespace std;  
int main()
{
    int a=10;
    cout<<"enter your reg no."<<a;
    return 0;
}


  
           ***
 


// Online C++ compiler to run C++ program online
#include <iostream>
using namespace std;

int main() 
{
    int a;
    int b;
cout <<"Enter Your Reg No; charan.";
cin >> a;
cout <<"Enter Your Frd Reg NO.";
 cin >> b;
cout <<"charan your reg no is:"<<a <<endl;
cout <<"your frds reg no is:"<<b;
return 0;
}





variable >>>> In C++ Are used to store data and and manipulated through a program.
Data Types in C++


Data types help the complier allocate the appropriate amount memory and determine how to interpret the data .


int >>>> These are used to store integer  values (whole number) i.e 1,2,3,4



float>>> used to store Decimal values  (single precision) >>> i.e 10.7,7.9
  double >>>(double precision) i.e 10.899,7.666


char >>> used to store a single character i.e A ,D.


string>> Is a sequence of character i.e"hello">>>'hello' >>>"hello"
 

LOOPS IN C++



loops in c++ are used to execute a block of code repeatedly  until a certain condition  is met . they helps in manage repetitive tasks


1. for loop : used when the number of iteration is known beforehand .
2. while loop : used when the number of iteration is not known and depends on a condition
3. do while loop : similar to the while loop , but guarantees that the block of code will be executed at least once before checking condition



Function in C++
a function in c++ is a group of statements that performs a specific task and can be reused anywhere in the program.

reusability
readability
debugging
modularity
collaboration







difference between encapsulation and abstracation

encapsulation:

* how data is hidden inside a class acces modifiers(private,public)

abstracation:

* what functionalities a exposed abstactclasses,interfaces,orpure virtual functions







// Operstors in C++
#include <iostream>
using namespace std;

int main() 
{
    int a = 20,b= 10;
    cout<<"geater :"<< (a < b)<<endl;
   
    cout<<"lesser :"<< (a > b) <<endl;

    return 0;
}





/ Operstors in C++
#include <iostream>
using namespace std;

int main() 
{
    int a = 20,b= 10;
    cout<<"Addition :"<< a + b<<endl;
   
    cout<<"substraction :"<< a - b <<endl;

    return 0;
}





#include <iostream>
#include <string>
using namespace std;
int main() {
    //declare variables
    string name = "cherry";
    int age = 18;
    float height= 170.1;
    float weight=60;
    string blood_group="O";
    cout <<"---user information---"<<endl;
    cout <<"name"<< name<<endl;
    cout <<"age"<< age<<"years"<<endl;
    cout <<"height"<< height<<"cm"<<endl;
    cout <<"weight"<< weight<<"kg"<<endl;
    cout <<"blood_group"<< blood_group<<endl;
    return 0;
}




/ Online C++ compiler to run C++ program online
#include <iostream>
using namespace std;

int main() {
    int num1,num2,num3;
    cout << "Enter three numbers : ";
    cin >> num1 >> num2 >> num3;
    
    if (num1 >= num2 && num1 >= num3)
    // find the largest number 
     {
     cout << num1 << "is the largest number " <<endl;
}
     else if (num2 >= num1 && num2 >= num3)
{
      cout << num2 <<" is the largest number "<<endl; 
}       
  else      
{       
      cout << num3 << "is the largest number "<<endl;
}
       return 0;
}


// Online C++ compiler to run C++ program online
#include <iostream>
using namespace std;
int main() {
   
    int a = 10;
    int b = 20;
    //logical operators
    cout << "logical OR exp1:"<< (a > 10 || a < 20) << endl;
    cout << "logical AND exp2:"<< (a > 5 && a < 15) << endl;
     cout << "logical NOT exp3:"<< !(a < 20) << endl;
     
     //bitwise operator
     cout << "bitwise AND :"<< (a > 5 & a < 15) << endl;
     cout << "bitwise AND :"<< (a & b) << endl;
      cout << "bitwise OR :"<< (a || b) << endl;
      cout << "bitwise NOT:"<< !(a < b) << endl;
    return 0;



// Online C++ compiler to run C++ program online
#include <iostream>
#include <string>
using namespace std;
int main() {
    //declare variables
    string name = " mukesh";
    int age = 18;
    float height= 6;
    float weight= 60;
    string blood_group="O";
    cout <<"---user information---"<<endl;
    cout <<"name"<< name<<endl;
    cout <<"age"<< age<<"years"<<endl;
    cout <<"height"<< height<<"feet"<<endl;
    cout <<"weight"<< weight<<"kg"<<endl;
    cout <<"blood_group"<< blood_group<<endl;
    return 0;
}



  //printing 1 to 50 numbers using for loop    
#include<iostream>
using namespace std;
int main ()
{
    for ( int i = -28 ; i <= 28 ;i++ )
    {
        cout<<i<<endl;
    }
    return 0;
}  

//printing 1 to 50 numbers using for loop    
#include<iostream>
using namespace std;
int main ()
{
   int i = 1;
   while(i <= 5)
{
    cout<<i<<endl;
    i++;
}
    return 0;
}

//printing 1 to 50 numbers using for loop    
#include<iostream>
using namespace std;
int main ()
{
   int i = 1;
   do
{
    cout<<i<<endl;
    i++;
}while(i <= 5);
    return 0;
}


// Functions in C++ a simple one 
#include<iostream>
using namespace std;

//function defition 
int add(int a ,int b)
{
    return a + b;
}
int mul(int a, int b)
{
    return a * b;
}
int sub(int a, int b)
{
    return a - b;


}
int main()
{
    cout<<"addtion :"<<add(5,10)<<endl;
     cout<<"multipication ;"<<mul(5,10)<<en
     cout<<"substraction :"<<sub(5,10)<<endl;
   
    
    
    
    return 0;
}







// Online C++ compiler to run C++ program online
#include <iostream>
using namespace std;
int main() {
int day;
cout <<"enter a number(1-7) corresponding to the day of the week :";
cin >> day;
//switch statement to dretermine the day of the week
switch(day)
{
    case 1:
    cout << "Monday" <<endl;
    break;
     case 2:
    cout << "Tuesday" <<endl;
    break;
     case 3:
    cout << "Wednesday " <<endl;
    break;
    case 4:
    cout << "Thursday " <<endl;
    break;
     case 5:
    cout << "Friday" <<endl;
    break;
     case 6:
    cout << "Saturday " <<endl;
    break;
     case 7:
    cout << "Sunday " <<endl;
    break;
    defult:
    cout << "invalid input! please enter a number between 1 and 7 "<<endl;
    break;
}
    return 0;
}




#include <iostream>
using namespace std;

class Car{
    string brand;
    string model;
    int price;
    int year;
};

int main() {
    Car car1; //creating object of the class car
    car1.brand = "BMW";
    car1.model = "b class";
    car1.price = "9000000";
    car1.year =2024;
    return 0;
}





#include<iostream>
using namespace std;

class car {
    public://public access specifier
    string brand;
string model;
int price;
int year;

//function of the display outpu
void display()
{
    cout<<"brand name"<<brand<<endl;
    cout<<"model name"<<model<<endl;
    cout<<"price:"<<price<<endl;
    cout<<"year of manufacturing:"<<brand<<endl;
}

};



    
    int main() {
        car car1;// creating of object of the
        cout<<"enter the brand name :"<<endl;
        //cin>>car1.brand;
        getline(cin,car1.brand);
        cout<<"enter the model name:"<<endl;
        getline(cin,car1.model);
        cout<<"enter the price:"<<endl;
        cin>> car1.price;
        cout<<"enter the man.f year:"<<endl;
        cin>>car1.year;
        
        cin.ignore(); // buffer value will be ignore
        
         car car2;// creating of object of the
        cout<<"enter the brand name :"<<endl;
        //cin>>car1.brand;
        getline(cin,car2.brand);
        cout<<"enter the model name:"<<endl;
        getline(cin,car2.model);
        cout<<"enter the price:"<<endl;
        cin>> car2.price;
        cout<<"enter the man.f year:"<<endl;
        cin>>car2.year;
        car1.display();
        car2.display();
        
        
    return 0;
    }




#include<iostream>
using namespace std;

class teacher {
    public://public access specifier
    string name;
    int subject;
    int year;

//function of the display output
void display()
{
    cout<<"teacher name"<<name<<endl;
    cout<<"subject:"<<subject<<endl;
    cout<<"year :"<<year<<endl;
}

};



    
    int main() {
        teacher tea1; 
        cout <<"teacher name:"<<endl;
        cin>>tea1.name;
        cout <<"subject:"<<endl;
        cin >> tea1.subject;
        cout <<"year:"<<endl;
        cin>>tea1.year;
        
    return 0;







#include <iostream>
using namespace std;
class car {
    public:
    string make;
    string model;
    int year;
    
    //defaulf constructor(no parameter)
    car()
    {
        make =  "benz";
        model = "m5";
        year = 2025;
    }
    
    void displayinfo(){
        cout <<year<<""<<make<<""<<model<<endl;
    }
    };
   #include<iostream>
   using namespace std;
   
   int main(){
       // creating object using default constructor car mycar;
      
       
       // displaying the information mycar.displayinfo();
       
    

    return 0;
}







#include <iostream>
using namespace std;

    class Teacher
{
        public:
        string name;
        string dept;
        int experience;
        double salary;
        
        //constructor 
        Teacher()
        {
            name = "pawan kalyan";
            dept = "political";
            experience = 10; 
            salary = 100000;
        }
        void displayinfo()
        {
            cout << "Teacher :" <<name<<endl;
            cout << "dept :" <<name<<endl;
            cout << "experience :" <<name<<endl;
            cout << "salary :" <<name<<endl;}
        
    };
    
    
    int main() 
    {
        Teacher T1; //create an object 
      T1.displayinfo();
      
    
    return 0;
}




#include <iostream>
using namespace std;

    class Teacher
{
        public:
        string name;
        string dept;
        int experience;
        double salary;
        
        //constructor 
        Teacher()
        {
            name = "pawan kalyan";
            dept = "political";
            experience = 10; 
            salary = 100000;
             cout << "Teacher :" <<name<<endl;
            cout << "dept :" <<name<<endl;
            cout << "experience :" <<name<<endl;
            cout << "salary :" <<name<<endl;}
        
        
};
    
    
    int main() 
    {
        Teacher T1; //create an object 
        
      
    
    return 0;
}









#include <iostream>
using namespace std;

    class Teacher
{
        public:
        string name;
        string dept;
        int experience;
        double salary;
        
        //constructor 
        Teacher()
        {
            name = "pawan kalyan";
            dept = "political";
            experience = 8; 
            salary = 100000;
             cout << "Teacher :" <<name<<endl;
            cout << "dept :" <<dept<<endl;
            cout << "experience :" <<experience<<endl;
            cout << "salary :" <<salary<<endl;}
        
        
};
    
    
    int main() 
    {
        Teacher T1; //create an object 
        
      
    
    return 0;
}    



#include <iostream>
using namespace std;

class Car {
 string brand;
 string model;
 int price;
 int year;
};

int main() {
    Car car1;//CREATING AN OBJECT OF THE CLASS CAR
    car1.brand= "BMW";
    Car1.model= "b class";
    car1.price=500000;
    car1.year=2024;
    
    

    return 0;
}
    
